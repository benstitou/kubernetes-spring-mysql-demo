apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app-spring
  labels:
    app: demo-app-spring
spec:
  replicas: 1                 # No. of replicas/pods to run in this deployment
  selector:
    matchLabels:              # The deployment applies to any pods mayching the specified labels
      app: demo-app-spring
  template:                   # Template for creating the pods in this deployment
    metadata:
      labels:                 # Labels that will be applied to each Pod in this deployment
        app: demo-app-spring
    spec:                     # Spec for the containers that will be run in the Pods
      containers:
      - name: demo-app-spring
        image: anasben2013/kubenretes-spring-mysql-demo
        imagePullPolicy: IfNotPresent
        ports:
          - name: http
            containerPort: 8080 # The port that the container exposes
        resources:
          limits:
            cpu: 0.2
            memory: "200Mi"
        env:                  # Environment variables supplied to the Pod
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-user-password
        - name: DB_SERVER
          valueFrom:
            configMapKeyRef:
              name:  mysql-configmap
              key: mysql-database-name
        - name: DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: mysql-configmap
              key: mysql-user-username
type: post
---
apiVersion: v1                # API version
kind: Service                 # Type of the kubernetes resource
metadata:                     
  name: polling-app-server    # Name of the kubernetes resource
  labels:                     # Labels that will be applied to this resource
    app: polling-app-server
spec:                         
  type: NodePort              # The service will be exposed by opening a Port on each node and proxying it. 
  selector:
    app: polling-app-server   # The service exposes Pods with label `app=polling-app-server`
  ports:                      # Forward incoming connections on port 8080 to the target port 8080
  - name: http
    port: 8080
    targetPort: 8080